<!DOCTYPE html>
<html lang="en">
	<%- include('partials/head.ejs') %>
	<body class="bg-gray-50 dark:bg-gray-900">
		<section>
			<div
				class="flex flex-col items-center justify-center px-6 py-8 mx-auto pt-8"
			>
				<a
					href="/"
					class="flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white"
				>
					To Do List
				</a>
				<div
					class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700"
				>
					<div class="p-6 space-y-4 md:space-y-6 sm:p-8">
						<h1
							class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white"
						>
							Create an account
						</h1>
						<form class="space-y-4 md:space-y-6">
							<div>
								<label
									for="name"
									class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
									>Your Name</label
								>
								<input
									type="text"
									name="name"
									id="name"
									class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
									placeholder="John Doe"
									required="true"
								/>
							</div>
							<div>
								<label
									for="email"
									class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
									>Your email</label
								>
								<input
									type="email"
									name="email"
									id="email"
									class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
									placeholder="name@company.com"
									required="true"
								/>
							</div>
							<div>
								<label
									for="password"
									class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
									>Password</label
								>
								<input
									type="password"
									name="password"
									id="password"
									placeholder="••••••••"
									class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
									required="true"
								/>
							</div>
							<div
								class="max-w-sm mx-auto bg-white rounded-lg shadow-md overflow-hidden items-center"
							>
								<div class="px-4 py-6">
									<input
										name="photo"
										id="upload"
										type="file"
										class="hidden"
										accept="image/*"
									/>
									<div
										id="image-preview"
										class="max-w-sm p-6 bg-gray-100 border-dashed border-2 border-gray-400 rounded-lg items-center mx-auto text-center cursor-pointer"
									>
										<label
											for="upload"
											class="cursor-pointer"
										>
											<svg
												xmlns="http://www.w3.org/2000/svg"
												fill="none"
												viewBox="0 0 24 24"
												stroke-width="1.5"
												stroke="currentColor"
												class="w-8 h-8 text-gray-700 mx-auto mb-4"
											>
												<path
													stroke-linecap="round"
													stroke-linejoin="round"
													d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5"
												/>
											</svg>
											<h5
												class="mb-2 text-xl font-bold tracking-tight text-gray-700"
											>
												Upload picture
											</h5>
											<p
												class="font-normal text-sm text-gray-400 md:px-6"
											>
												Choose photo size should be less
												than
												<b class="text-gray-600">2mb</b>
											</p>
											<p
												class="font-normal text-sm text-gray-400 md:px-6"
											>
												and should be in
												<b class="text-gray-600"
													>JPG, PNG, or GIF</b
												>
												format.
											</p>
										</label>
									</div>
									<span
										id="filename"
										class="text-gray-500 mt-1 text-center"
									></span>
								</div>
							</div>
							<button
								type="submit"
								class="w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
							>
								Create an account
							</button>
							<p
								class="text-sm font-light text-gray-500 dark:text-gray-400"
							>
								Already have an account?
								<a
									href="/api/users/login"
									class="font-medium text-primary-600 hover:underline dark:text-primary-500"
									>Login here</a
								>
							</p>
						</form>
					</div>
				</div>
			</div>
		</section>
		<script>
			function handleImageUpload() {
				const uploadInput = document.getElementById("upload");
				const filenameLabel = document.getElementById("filename");
				const imagePreview = document.getElementById("image-preview");

				// Check if the event listener has been added before
				let isEventListenerAdded = false;

				uploadInput.addEventListener("change", (event) => {
					const file = event.target.files[0];

					if (file) {
						filenameLabel.textContent = file.name;

						const reader = new FileReader();
						reader.onload = (e) => {
							imagePreview.innerHTML = `<img src="${e.target.result}" class="max-h-48 rounded-lg mx-auto" alt="Image preview" />`;
							imagePreview.classList.remove(
								"border-dashed",
								"border-2",
								"border-gray-400"
							);

							// Add event listener for image preview only once
							if (!isEventListenerAdded) {
								imagePreview.addEventListener("click", () => {
									uploadInput.click();
								});

								isEventListenerAdded = true;
							}
						};
						reader.readAsDataURL(file);
					} else {
						filenameLabel.textContent = "";
						imagePreview.innerHTML = `<div class="bg-gray-200 h-48 rounded-lg flex items-center justify-center text-gray-500">No image preview</div>`;
						imagePreview.classList.add(
							"border-dashed",
							"border-2",
							"border-gray-400"
						);

						// Remove the event listener when there's no image
						imagePreview.removeEventListener("click", () => {
							uploadInput.click();
						});

						isEventListenerAdded = false;
					}
				});

				uploadInput.addEventListener("click", (event) => {
					event.stopPropagation();
				});
			}

			handleImageUpload();

			const form = document.querySelector("form");

			form.addEventListener("submit", async (event) => {
				event.preventDefault();

				const name = form.name.value;
				const email = form.email.value;
				const password = form.password.value;

				try {
					const response = await fetch("/api/users/register", {
						method: "POST",
						body: new FormData(form),
					});

					const data = await response.json();

					if (data.error) {
						form.name.value = "";
						form.email.value = "";
						form.password.value = "";

						return window.alert(
							`Registration failed! Err: ${data.error}`
						);
					}

					if (data.accessToken) {
						return (window.location.href = "/");
					}
				} catch (error) {
					form.name.value = "";
					form.email.value = "";
					form.password.value = "";

					return window.alert(
						`Registration failed! Err: ${data.error}`
					);
				}
			});
		</script>
	</body>
</html>
